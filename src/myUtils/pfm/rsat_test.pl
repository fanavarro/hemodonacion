#!/usr/bin/perl
# the first line of the script must tell us which language interpreter to use,
# in this case its perl

use strict;

# import the modules we need for this test; XML::Compile is included on the server
# by default.
use XML::Compile::SOAP11;
use XML::Compile::WSDL11;
use XML::Compile::Transport::SOAPHTTP;
use Data::Dumper;

eval
{
    # Retriving and processing the WSDL
#    my $wsdl  = XML::LibXML->new->parse_file('http://rsat.ulb.ac.be/rsat/web_services/RSATWS.wsdl');
    my $wsdl  = XML::LibXML->new->parse_file('http://pedagogix-tagc.univ-mrs.fr/rsat/web_services/RSATWS.wsdl');
    my $proxy = XML::Compile::WSDL11->new($wsdl);
    
    # Generating a request message based on the WSDL
    my $client = $proxy->compileClient('matrix_scan');
    
    #Defining a few parameters
    my $sequence = '>ins
TCTGCCCCACCCTGTCCTCTGGAACCTCTGCGAGATTTAGAGGAAAGAACCAGTTTTCAG
GCGGATTGCCTCAGATCACACTATCTCCACTTGCCCAGCCCTGTGGAAGATTAGCGGCCA
TGTATTCCAATGTGATAGGAACTGTAACCTCTGGAAAAAGGAAGGTTTATCTTTTGTCCT
TGCTGCTCATTGGCTTCTGGGACTGCGTGACCTGTCACGGGAGCCCTGTGGACATCTGCA
CAGCCAAGCCGCGGGACATTCCCATGAATCCCATGTGCATTTACCGCTCCCCGGAGAAGA
AGGCAACTGAGGATGAGGGCTCAGAACAGAAGATCCCGGAGGCCACCAACCGGCGTGTCT
GGGAACTGTCCAAGGCCAATTCCCGCTTTGCTACCACTTTCTATCAGCACCTGGCAGATT
CCAAGAATGACAATGATAACATTTTCCTGTCACCCCTGAGTATCTCCACGGCTTTTGCTA
TGACCAAGCTGGGTGCCTGTAATGACACCCTCCAGCAACTGATGGAGGTATTTAAGTTTG
ACACCATATCTGAGAAAACATCTGATCAGATCCACTTCTTCTTTGCCAAACTGAACTGCC
GACTCTATCGAAAAGCCAACAAATCCTCCAAGTTAGTATCAGCCAATCGCCTTTTTGGAG
ACAAATCCCTTACCTTCAATGAGACCTACCAGGACATCAGTGAGTTGGTATATGGAGCCA
AGCTCCAGCCCCTGGACTTCAAGGAAAATGCAGAGCAATCCAGAGCGGCCATCAACAAAT
GGGTGTCCAATAAGACCGAAGGCCGAATCACCGATGTCATTCCCTCGGAAGCCATCAATG
AGCTCACTGTTCTGGTGCTGGTTAACACCATTTACTTCAAGGGCCTGTGGAAGTCAAAGT
TCAGCCCTGAGAACACAAGGAAGGAACTGTTCTACAAGGCTGATGGAGAGTCGTGTTCAG
CATCTATGATGTACCAGGAAGGCAAGTTCCGTTATCGGCGCGTGGCTGAAGGCACCCAGG
TGCTTGAGTTGCCCTTCAAAGGTGATGACATCACCATGGTCCTCATCTTGCCCAAGCCTG
AGAAGAGCCTGGCCAAGGTAGAGAAGGAACTCACCCCAGAGGTGCTGCAAGAGTGGCTGG
ATGAATTGGAGGAGATGATGCTGGTGGTCCACATGCCCCGCTTCCGCATTGAGGACGGCT
TCAGTTTGAAGGAGCAGCTGCAAGACATGGGCCTTGTCGATCTGTTCAGCCCTGAAAAGT
CCAAACTCCCAGGTATTGTTGCAGAAGGCCGAGATGACCTCTATGTCTCAGATGCATTCC
ATAAGGCATTTCTTGAGGTAAATGAAGAAGGCAGTGAAGCAGCTGCAAGTACCGCTGTTG
TGATTGCTGGCCGTTCGCTAAACCCCAACAGGGTGACTTTCAAGGCCAACAGGCCTTTCC
TGGTTTTTATAAGAGAAGTTCCTCTGAACACTATTATCTTCATGGGCAGAGTAGCCAACC
CTTGTGTTAAGTAAAATGTTCTTATTCTTTGCACCTCTTCCTATTTTTGGTTTGTGAACA
GAAGTAAAAATAAATACAAACTACTTCCATCTCA';

    my $matrix = '>canonical_ensembl_havana_initiation_codon_context
0.204237288135593	0.320197740112994	0.296468926553672	0.17909604519774	
0.190324858757062	0.271257062146893	0.369703389830508	0.168714689265537	
0.177895480225989	0.345974576271186	0.307485875706215	0.16864406779661	
0.19159604519774	0.343573446327684	0.283686440677966	0.18114406779661	
0.187217514124294	0.238912429378531	0.411581920903955	0.16228813559322	
0.162923728813559	0.339477401129944	0.319985875706215	0.177612994350282	
0.233121468926554	0.399576271186441	0.258686440677966	0.10861581920904	
0.456426553672316	0.0957627118644068	0.394844632768362	0.0529661016949153	
0.276694915254237	0.407909604519774	0.19774011299435	0.117655367231638	
0.169067796610169	0.474435028248588	0.284533898305085	0.0719632768361582	
0.999081920903955	0.000706214689265537	7.06214689265537e-05	0.000141242937853107	
0	0.000141242937853107	0	0.999858757062147	
0.000141242937853107	0	0.99978813559322	7.06214689265537e-05	
0.208545197740113	0.146680790960452	0.509533898305085	0.13524011299435	
0.261793785310734	0.414477401129944	0.186723163841808	0.137005649717514	
0.14159604519774	0.267655367231638	0.398799435028249	0.191949152542373	
0.223516949152542	0.262358757062147	0.357556497175141	0.156567796610169	
0.247175141242938	0.329731638418079	0.222245762711864	0.200847457627119	
0.157203389830508	0.334180790960452	0.347598870056497	0.161016949152542	
0.230225988700565	0.287782485875706	0.31659604519774	0.165395480225989	
0.24364406779661	0.307485875706215	0.214053672316384	0.234816384180791	
0.174646892655367	0.312994350282486	0.350070621468927	0.16228813559322	
0.246045197740113	0.254872881355932	0.347810734463277	0.151271186440678';

    my $background = 'upstream';
    my $organism = 'Mus_musculus_EnsEMBL';
    my $markov = 0;
    my $background_pseudo = 0.01;
    my @uth = ('pval 0.01');
    my $str = 2;
    my $origin = 'start';
    my $pseudo = 1;
    my $n_treatment = 'score';
    my $matrix_format = 'cluster-buster';
#   my $quick = '1';

    my %args = (
#	'verbosity' => 1,
	'sequence' => $sequence, 
	'matrix' => $matrix,
	'background' => $background,
	'organism' => $organism,
#	'quick' => $quick,
	'markov' => $markov,
	'background_pseudo' => $background_pseudo,
	'uth' => \@uth,
	'str' => $str,
	'origin' => $origin,
	'pseudo' => $pseudo,
	'n_treatment' => $n_treatment,
        'matrix_format' => $matrix_format
	);

    # Calling the service and getting the response
    my $answer = $client->( request => {%args});

    if ( defined $answer ) {
      warn ("Server command : ".$answer->{output}->{response}->{command}."\n");
      if ($answer->{output}->{response}->{client}){
	print "\nResult :\n\n", $answer->{output}->{response}->{client}, "\n";
	exit 0;
      }
    }
};

if ($@)
{
    print "Caught an exception\n";
    print $@."\n";
    exit 1;
}
