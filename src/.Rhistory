install.packages("xlsx")
install.packages("xlsxjars")
install.packages("xlsx")
install.packages("xlsx")
install.packages("xlsx")
install.packages("modeest")
source("https://bioconductor.org/biocLite.R")
biocLite("seqLogo")
library(seqLogo)
library(PWMEnrich)
setwd("/home/fabad/hemodonacion/src")
# Leer las secuencias alrededor del codon de inicio extraidas de ensembl
kozakContextSequences = readDNAStringSet("kozaks2.fasta", format = "fasta")
# Crear la matrix de frecuencia a partir de las secuencias
pfm = consensusMatrix(kozakContextSequences)
# Crear la matriz de peso
pwm = PWM(pfm)
# Secuencia de prueba sobre la que buscar matches
ins = "TCTGCCCCACCCTGTCCTCTGGAACCTCTGCGAGATTTAGAGGAAAGAACCAGTTTTCAGGCGGATTGCCTCAGATCACACTATCTCCACTTGCCCAGCCCTGTGGAAGATTAGCGGCCATGTATTCCAATGTGATAGGAACTGTAACCTCTGGAAAAAGGAAGGTTTATCTTTTGTCCTTGCTGCTCATTGGCTTCTGGGACTGCGTGACCTGTCACGGGAGCCCTGTGGACATCTGCACAGCCAAGCCGCGGGACATTCCCATGAATCCCATGTGCATTTACCGCTCCCCGGAGAAGAAGGCAACTGAGGATGAGGGCTCAGAACAGAAGATCCCGGAGGCCACCAACCGGCGTGTCTGGGAACTGTCCAAGGCCAATTCCCGCTTTGCTACCACTTTCTATCAGCACCTGGCAGATTCCAAGAATGACAATGATAACATTTTCCTGTCACCCCTGAGTATCTCCACGGCTTTTGCTATGACCAAGCTGGGTGCCTGTAATGACACCCTCCAGCAACTGATGGAGGTATTTAAGTTTGACACCATATCTGAGAAAACATCTGATCAGATCCACTTCTTCTTTGCCAAACTGAACTGCCGACTCTATCGAAAAGCCAACAAATCCTCCAAGTTAGTATCAGCCAATCGCCTTTTTGGAGACAAATCCCTTACCTTCAATGAGACCTACCAGGACATCAGTGAGTTGGTATATGGAGCCAAGCTCCAGCCCCTGGACTTCAAGGAAAATGCAGAGCAATCCAGAGCGGCCATCAACAAATGGGTGTCCAATAAGACCGAAGGCCGAATCACCGATGTCATTCCCTCGGAAGCCATCAATGAGCTCACTGTTCTGGTGCTGGTTAACACCATTTACTTCAAGGGCCTGTGGAAGTCAAAGTTCAGCCCTGAGAACACAAGGAAGGAACTGTTCTACAAGGCTGATGGAGAGTCGTGTTCAGCATCTATGATGTACCAGGAAGGCAAGTTCCGTTATCGGCGCGTGGCTGAAGGCACCCAGGTGCTTGAGTTGCCCTTCAAAGGTGATGACATCACCATGGTCCTCATCTTGCCCAAGCCTGAGAAGAGCCTGGCCAAGGTAGAGAAGGAACTCACCCCAGAGGTGCTGCAAGAGTGGCTGGATGAATTGGAGGAGATGATGCTGGTGGTCCACATGCCCCGCTTCCGCATTGAGGACGGCTTCAGTTTGAAGGAGCAGCTGCAAGACATGGGCCTTGTCGATCTGTTCAGCCCTGAAAAGTCCAAACTCCCAGGTATTGTTGCAGAAGGCCGAGATGACCTCTATGTCTCAGATGCATTCCATAAGGCATTTCTTGAGGTAAATGAAGAAGGCAGTGAAGCAGCTGCAAGTACCGCTGTTGTGATTGCTGGCCGTTCGCTAAACCCCAACAGGGTGACTTTCAAGGCCAACAGGCCTTTCCTGGTTTTTATAAGAGAAGTTCCTCTGAACACTATTATCTTCATGGGCAGAGTAGCCAACCCTTGTGTTAAGTAAAATGTTCTTATTCTTTGCACCTCTTCCTATTTTTGGTTTGTGAACAGAAGTAAAAATAAATACAAACTACTTCCATCTCA"
matchPWM(pwm, ins)
seqLogo(pwm)
View(pwm)
seqLogo(t(pwm))
seqLogo(makePWM(pwm))
seqLogo(makePWM(pfm))
seqLogo(pwm)
seqLogo(pfm[1:4 , ])
View(pfm)
pfm = consensusMatrix(kozakContextSequences, as.prob = T)
pwm = PWM(pfm)
seqLogo(pfm[1:4 , ])
kozakContextSequences = readDNAStringSet("kozaks2.fasta", format = "fasta")
pfm = consensusMatrix(kozakContextSequences, as.prob = T)
View(pfm)
seqLogo(pfm[1:4 , ])
pfm = consensusMatrix(kozakContextSequences)
pwm = PWM(pfm)
View(pwm)
ins = "TCTGCCCCACCCTGTCCTCTGGAACCTCTGCGAGATTTAGAGGAAAGAACCAGTTTTCAGGCGGATTGCCTCAGATCACACTATCTCCACTTGCCCAGCCCTGTGGAAGATTAGCGGCCATGTATTCCAATGTGATAGGAACTGTAACCTCTGGAAAAAGGAAGGTTTATCTTTTGTCCTTGCTGCTCATTGGCTTCTGGGACTGCGTGACCTGTCACGGGAGCCCTGTGGACATCTGCACAGCCAAGCCGCGGGACATTCCCATGAATCCCATGTGCATTTACCGCTCCCCGGAGAAGAAGGCAACTGAGGATGAGGGCTCAGAACAGAAGATCCCGGAGGCCACCAACCGGCGTGTCTGGGAACTGTCCAAGGCCAATTCCCGCTTTGCTACCACTTTCTATCAGCACCTGGCAGATTCCAAGAATGACAATGATAACATTTTCCTGTCACCCCTGAGTATCTCCACGGCTTTTGCTATGACCAAGCTGGGTGCCTGTAATGACACCCTCCAGCAACTGATGGAGGTATTTAAGTTTGACACCATATCTGAGAAAACATCTGATCAGATCCACTTCTTCTTTGCCAAACTGAACTGCCGACTCTATCGAAAAGCCAACAAATCCTCCAAGTTAGTATCAGCCAATCGCCTTTTTGGAGACAAATCCCTTACCTTCAATGAGACCTACCAGGACATCAGTGAGTTGGTATATGGAGCCAAGCTCCAGCCCCTGGACTTCAAGGAAAATGCAGAGCAATCCAGAGCGGCCATCAACAAATGGGTGTCCAATAAGACCGAAGGCCGAATCACCGATGTCATTCCCTCGGAAGCCATCAATGAGCTCACTGTTCTGGTGCTGGTTAACACCATTTACTTCAAGGGCCTGTGGAAGTCAAAGTTCAGCCCTGAGAACACAAGGAAGGAACTGTTCTACAAGGCTGATGGAGAGTCGTGTTCAGCATCTATGATGTACCAGGAAGGCAAGTTCCGTTATCGGCGCGTGGCTGAAGGCACCCAGGTGCTTGAGTTGCCCTTCAAAGGTGATGACATCACCATGGTCCTCATCTTGCCCAAGCCTGAGAAGAGCCTGGCCAAGGTAGAGAAGGAACTCACCCCAGAGGTGCTGCAAGAGTGGCTGGATGAATTGGAGGAGATGATGCTGGTGGTCCACATGCCCCGCTTCCGCATTGAGGACGGCTTCAGTTTGAAGGAGCAGCTGCAAGACATGGGCCTTGTCGATCTGTTCAGCCCTGAAAAGTCCAAACTCCCAGGTATTGTTGCAGAAGGCCGAGATGACCTCTATGTCTCAGATGCATTCCATAAGGCATTTCTTGAGGTAAATGAAGAAGGCAGTGAAGCAGCTGCAAGTACCGCTGTTGTGATTGCTGGCCGTTCGCTAAACCCCAACAGGGTGACTTTCAAGGCCAACAGGCCTTTCCTGGTTTTTATAAGAGAAGTTCCTCTGAACACTATTATCTTCATGGGCAGAGTAGCCAACCCTTGTGTTAAGTAAAATGTTCTTATTCTTTGCACCTCTTCCTATTTTTGGTTTGTGAACAGAAGTAAAAATAAATACAAACTACTTCCATCTCA"
matchPWM(pwm, ins)
hits = matchPWM(pwm, ins)
summary(hits)
matchPWM(pwm, ins, with.score = T)
hits = matchPWM(pwm, ins, with.score = T)
summary(hits)
head(mcols(hits)$score)
hits$score
mcols(hits)
library(PWMEnrich)
setwd("/home/fabad/hemodonacion/src")
# Leer las secuencias alrededor del codon de inicio extraidas de ensembl
kozakContextSequences = readDNAStringSet("kozaks2.fasta", format = "fasta")
# Crear la matrix de counts a partir de las secuencias
pfm = consensusMatrix(kozakContextSequences, as.prob = F)
# Crear la matriz de peso
pwm = PWM(pfm)
# Secuencia de prueba sobre la que buscar matches
ins = "TCTGCCCCACCCTGTCCTCTGGAACCTCTGCGAGATTTAGAGGAAAGAACCAGTTTTCAGGCGGATTGCCTCAGATCACACTATCTCCACTTGCCCAGCCCTGTGGAAGATTAGCGGCCATGTATTCCAATGTGATAGGAACTGTAACCTCTGGAAAAAGGAAGGTTTATCTTTTGTCCTTGCTGCTCATTGGCTTCTGGGACTGCGTGACCTGTCACGGGAGCCCTGTGGACATCTGCACAGCCAAGCCGCGGGACATTCCCATGAATCCCATGTGCATTTACCGCTCCCCGGAGAAGAAGGCAACTGAGGATGAGGGCTCAGAACAGAAGATCCCGGAGGCCACCAACCGGCGTGTCTGGGAACTGTCCAAGGCCAATTCCCGCTTTGCTACCACTTTCTATCAGCACCTGGCAGATTCCAAGAATGACAATGATAACATTTTCCTGTCACCCCTGAGTATCTCCACGGCTTTTGCTATGACCAAGCTGGGTGCCTGTAATGACACCCTCCAGCAACTGATGGAGGTATTTAAGTTTGACACCATATCTGAGAAAACATCTGATCAGATCCACTTCTTCTTTGCCAAACTGAACTGCCGACTCTATCGAAAAGCCAACAAATCCTCCAAGTTAGTATCAGCCAATCGCCTTTTTGGAGACAAATCCCTTACCTTCAATGAGACCTACCAGGACATCAGTGAGTTGGTATATGGAGCCAAGCTCCAGCCCCTGGACTTCAAGGAAAATGCAGAGCAATCCAGAGCGGCCATCAACAAATGGGTGTCCAATAAGACCGAAGGCCGAATCACCGATGTCATTCCCTCGGAAGCCATCAATGAGCTCACTGTTCTGGTGCTGGTTAACACCATTTACTTCAAGGGCCTGTGGAAGTCAAAGTTCAGCCCTGAGAACACAAGGAAGGAACTGTTCTACAAGGCTGATGGAGAGTCGTGTTCAGCATCTATGATGTACCAGGAAGGCAAGTTCCGTTATCGGCGCGTGGCTGAAGGCACCCAGGTGCTTGAGTTGCCCTTCAAAGGTGATGACATCACCATGGTCCTCATCTTGCCCAAGCCTGAGAAGAGCCTGGCCAAGGTAGAGAAGGAACTCACCCCAGAGGTGCTGCAAGAGTGGCTGGATGAATTGGAGGAGATGATGCTGGTGGTCCACATGCCCCGCTTCCGCATTGAGGACGGCTTCAGTTTGAAGGAGCAGCTGCAAGACATGGGCCTTGTCGATCTGTTCAGCCCTGAAAAGTCCAAACTCCCAGGTATTGTTGCAGAAGGCCGAGATGACCTCTATGTCTCAGATGCATTCCATAAGGCATTTCTTGAGGTAAATGAAGAAGGCAGTGAAGCAGCTGCAAGTACCGCTGTTGTGATTGCTGGCCGTTCGCTAAACCCCAACAGGGTGACTTTCAAGGCCAACAGGCCTTTCCTGGTTTTTATAAGAGAAGTTCCTCTGAACACTATTATCTTCATGGGCAGAGTAGCCAACCCTTGTGTTAAGTAAAATGTTCTTATTCTTTGCACCTCTTCCTATTTTTGGTTTGTGAACAGAAGTAAAAATAAATACAAACTACTTCCATCTCA"
hits = matchPWM(pwm, ins, with.score = T)
mcols(hits)
hits
View(pwm)
write(pwm, file = "kozak_context.pwm")
read("kozak_context.pwm")
readBin("kozak_context.pwm")
writeBin(pwm, file = "kozak_context.pwm")
read.table("kozak_context.pwm")
read.table(file="kozak_context.pwm")
pwm
View(pwm)
write.table(pwm, file = "kozak_context.pwm")
read.table("kozak_context.pwm")
hits = matchPWM(pwm, ins, with.score = T)
ins = "TCTGCCCCACCCTGTCCTCTGGAACCTCTGCGAGATTTAGAGGAAAGAACCAGTTTTCAGGCGGATTGCCTCAGATCACACTATCTCCACTTGCCCAGCCCTGTGGAAGATTAGCGGCCATGTATTCCAATGTGATAGGAACTGTAACCTCTGGAAAAAGGAAGGTTTATCTTTTGTCCTTGCTGCTCATTGGCTTCTGGGACTGCGTGACCTGTCACGGGAGCCCTGTGGACATCTGCACAGCCAAGCCGCGGGACATTCCCATGAATCCCATGTGCATTTACCGCTCCCCGGAGAAGAAGGCAACTGAGGATGAGGGCTCAGAACAGAAGATCCCGGAGGCCACCAACCGGCGTGTCTGGGAACTGTCCAAGGCCAATTCCCGCTTTGCTACCACTTTCTATCAGCACCTGGCAGATTCCAAGAATGACAATGATAACATTTTCCTGTCACCCCTGAGTATCTCCACGGCTTTTGCTATGACCAAGCTGGGTGCCTGTAATGACACCCTCCAGCAACTGATGGAGGTATTTAAGTTTGACACCATATCTGAGAAAACATCTGATCAGATCCACTTCTTCTTTGCCAAACTGAACTGCCGACTCTATCGAAAAGCCAACAAATCCTCCAAGTTAGTATCAGCCAATCGCCTTTTTGGAGACAAATCCCTTACCTTCAATGAGACCTACCAGGACATCAGTGAGTTGGTATATGGAGCCAAGCTCCAGCCCCTGGACTTCAAGGAAAATGCAGAGCAATCCAGAGCGGCCATCAACAAATGGGTGTCCAATAAGACCGAAGGCCGAATCACCGATGTCATTCCCTCGGAAGCCATCAATGAGCTCACTGTTCTGGTGCTGGTTAACACCATTTACTTCAAGGGCCTGTGGAAGTCAAAGTTCAGCCCTGAGAACACAAGGAAGGAACTGTTCTACAAGGCTGATGGAGAGTCGTGTTCAGCATCTATGATGTACCAGGAAGGCAAGTTCCGTTATCGGCGCGTGGCTGAAGGCACCCAGGTGCTTGAGTTGCCCTTCAAAGGTGATGACATCACCATGGTCCTCATCTTGCCCAAGCCTGAGAAGAGCCTGGCCAAGGTAGAGAAGGAACTCACCCCAGAGGTGCTGCAAGAGTGGCTGGATGAATTGGAGGAGATGATGCTGGTGGTCCACATGCCCCGCTTCCGCATTGAGGACGGCTTCAGTTTGAAGGAGCAGCTGCAAGACATGGGCCTTGTCGATCTGTTCAGCCCTGAAAAGTCCAAACTCCCAGGTATTGTTGCAGAAGGCCGAGATGACCTCTATGTCTCAGATGCATTCCATAAGGCATTTCTTGAGGTAAATGAAGAAGGCAGTGAAGCAGCTGCAAGTACCGCTGTTGTGATTGCTGGCCGTTCGCTAAACCCCAACAGGGTGACTTTCAAGGCCAACAGGCCTTTCCTGGTTTTTATAAGAGAAGTTCCTCTGAACACTATTATCTTCATGGGCAGAGTAGCCAACCCTTGTGTTAAGTAAAATGTTCTTATTCTTTGCACCTCTTCCTATTTTTGGTTTGTGAACAGAAGTAAAAATAAATACAAACTACTTCCATCTCA"
hits = matchPWM(pwm, ins, with.score = T)
pfm = consensusMatrix(kozakContextSequences, as.prob = F)
kozakContextSequences = readDNAStringSet("kozaks2.fasta", format = "fasta")
kozakContextSequences = readDNAStringSet("kozaks2.fasta", format = "fasta")
hits = matchPWM(pwm, ins, with.score = T)
library(PWMEnrich)
pwm = PWM(pfm)
kozakContextSequences = readDNAStringSet("kozaks2.fasta", format = "fasta")
pfm = consensusMatrix(kozakContextSequences, as.prob = F)
pwm = PWM(pfm)
# Secuencia de prueba sobre la que buscar matches
ins = "TCTGCCCCACCCTGTCCTCTGGAACCTCTGCGAGATTTAGAGGAAAGAACCAGTTTTCAGGCGGATTGCCTCAGATCACACTATCTCCACTTGCCCAGCCCTGTGGAAGATTAGCGGCCATGTATTCCAATGTGATAGGAACTGTAACCTCTGGAAAAAGGAAGGTTTATCTTTTGTCCTTGCTGCTCATTGGCTTCTGGGACTGCGTGACCTGTCACGGGAGCCCTGTGGACATCTGCACAGCCAAGCCGCGGGACATTCCCATGAATCCCATGTGCATTTACCGCTCCCCGGAGAAGAAGGCAACTGAGGATGAGGGCTCAGAACAGAAGATCCCGGAGGCCACCAACCGGCGTGTCTGGGAACTGTCCAAGGCCAATTCCCGCTTTGCTACCACTTTCTATCAGCACCTGGCAGATTCCAAGAATGACAATGATAACATTTTCCTGTCACCCCTGAGTATCTCCACGGCTTTTGCTATGACCAAGCTGGGTGCCTGTAATGACACCCTCCAGCAACTGATGGAGGTATTTAAGTTTGACACCATATCTGAGAAAACATCTGATCAGATCCACTTCTTCTTTGCCAAACTGAACTGCCGACTCTATCGAAAAGCCAACAAATCCTCCAAGTTAGTATCAGCCAATCGCCTTTTTGGAGACAAATCCCTTACCTTCAATGAGACCTACCAGGACATCAGTGAGTTGGTATATGGAGCCAAGCTCCAGCCCCTGGACTTCAAGGAAAATGCAGAGCAATCCAGAGCGGCCATCAACAAATGGGTGTCCAATAAGACCGAAGGCCGAATCACCGATGTCATTCCCTCGGAAGCCATCAATGAGCTCACTGTTCTGGTGCTGGTTAACACCATTTACTTCAAGGGCCTGTGGAAGTCAAAGTTCAGCCCTGAGAACACAAGGAAGGAACTGTTCTACAAGGCTGATGGAGAGTCGTGTTCAGCATCTATGATGTACCAGGAAGGCAAGTTCCGTTATCGGCGCGTGGCTGAAGGCACCCAGGTGCTTGAGTTGCCCTTCAAAGGTGATGACATCACCATGGTCCTCATCTTGCCCAAGCCTGAGAAGAGCCTGGCCAAGGTAGAGAAGGAACTCACCCCAGAGGTGCTGCAAGAGTGGCTGGATGAATTGGAGGAGATGATGCTGGTGGTCCACATGCCCCGCTTCCGCATTGAGGACGGCTTCAGTTTGAAGGAGCAGCTGCAAGACATGGGCCTTGTCGATCTGTTCAGCCCTGAAAAGTCCAAACTCCCAGGTATTGTTGCAGAAGGCCGAGATGACCTCTATGTCTCAGATGCATTCCATAAGGCATTTCTTGAGGTAAATGAAGAAGGCAGTGAAGCAGCTGCAAGTACCGCTGTTGTGATTGCTGGCCGTTCGCTAAACCCCAACAGGGTGACTTTCAAGGCCAACAGGCCTTTCCTGGTTTTTATAAGAGAAGTTCCTCTGAACACTATTATCTTCATGGGCAGAGTAGCCAACCCTTGTGTTAAGTAAAATGTTCTTATTCTTTGCACCTCTTCCTATTTTTGGTTTGTGAACAGAAGTAAAAATAAATACAAACTACTTCCATCTCA"
hits = matchPWM(pwm, ins, with.score = T)
hits
library(PWMEnrich)
setwd("/home/fabad/hemodonacion/src")
kozakContextSequences = readDNAStringSet("kozaks2.fasta", format = "fasta")
pwm = read.table("myUtils/pwm/kozak_context.pwm")
# Secuencia de prueba sobre la que buscar matches
ins = "TCTGCCCCACCCTGTCCTCTGGAACCTCTGCGAGATTTAGAGGAAAGAACCAGTTTTCAGGCGGATTGCCTCAGATCACACTATCTCCACTTGCCCAGCCCTGTGGAAGATTAGCGGCCATGTATTCCAATGTGATAGGAACTGTAACCTCTGGAAAAAGGAAGGTTTATCTTTTGTCCTTGCTGCTCATTGGCTTCTGGGACTGCGTGACCTGTCACGGGAGCCCTGTGGACATCTGCACAGCCAAGCCGCGGGACATTCCCATGAATCCCATGTGCATTTACCGCTCCCCGGAGAAGAAGGCAACTGAGGATGAGGGCTCAGAACAGAAGATCCCGGAGGCCACCAACCGGCGTGTCTGGGAACTGTCCAAGGCCAATTCCCGCTTTGCTACCACTTTCTATCAGCACCTGGCAGATTCCAAGAATGACAATGATAACATTTTCCTGTCACCCCTGAGTATCTCCACGGCTTTTGCTATGACCAAGCTGGGTGCCTGTAATGACACCCTCCAGCAACTGATGGAGGTATTTAAGTTTGACACCATATCTGAGAAAACATCTGATCAGATCCACTTCTTCTTTGCCAAACTGAACTGCCGACTCTATCGAAAAGCCAACAAATCCTCCAAGTTAGTATCAGCCAATCGCCTTTTTGGAGACAAATCCCTTACCTTCAATGAGACCTACCAGGACATCAGTGAGTTGGTATATGGAGCCAAGCTCCAGCCCCTGGACTTCAAGGAAAATGCAGAGCAATCCAGAGCGGCCATCAACAAATGGGTGTCCAATAAGACCGAAGGCCGAATCACCGATGTCATTCCCTCGGAAGCCATCAATGAGCTCACTGTTCTGGTGCTGGTTAACACCATTTACTTCAAGGGCCTGTGGAAGTCAAAGTTCAGCCCTGAGAACACAAGGAAGGAACTGTTCTACAAGGCTGATGGAGAGTCGTGTTCAGCATCTATGATGTACCAGGAAGGCAAGTTCCGTTATCGGCGCGTGGCTGAAGGCACCCAGGTGCTTGAGTTGCCCTTCAAAGGTGATGACATCACCATGGTCCTCATCTTGCCCAAGCCTGAGAAGAGCCTGGCCAAGGTAGAGAAGGAACTCACCCCAGAGGTGCTGCAAGAGTGGCTGGATGAATTGGAGGAGATGATGCTGGTGGTCCACATGCCCCGCTTCCGCATTGAGGACGGCTTCAGTTTGAAGGAGCAGCTGCAAGACATGGGCCTTGTCGATCTGTTCAGCCCTGAAAAGTCCAAACTCCCAGGTATTGTTGCAGAAGGCCGAGATGACCTCTATGTCTCAGATGCATTCCATAAGGCATTTCTTGAGGTAAATGAAGAAGGCAGTGAAGCAGCTGCAAGTACCGCTGTTGTGATTGCTGGCCGTTCGCTAAACCCCAACAGGGTGACTTTCAAGGCCAACAGGCCTTTCCTGGTTTTTATAAGAGAAGTTCCTCTGAACACTATTATCTTCATGGGCAGAGTAGCCAACCCTTGTGTTAAGTAAAATGTTCTTATTCTTTGCACCTCTTCCTATTTTTGGTTTGTGAACAGAAGTAAAAATAAATACAAACTACTTCCATCTCA"
hits = matchPWM(pwm, ins, with.score = T)
View(pwm)
pwm = data.matrix(read.table("myUtils/pwm/kozak_context.pwm"))
hits = matchPWM(pwm, ins, with.score = T)
mcols(hits)
hits = matchPWM(pwm, ins, with.score = T)
mcols(hits)
hits
as.dataframe(hits)
as.data.frame(hits)
rbind(data.frame(start=start(hits), end=end(hits)))
hits
rbind(data.frame(start=start(hits), end=end(hits), width=width(hits)))
rbind(data.frame(start=start(hits), end=end(hits), width=width(hits), score=mcols(hits)))
rbind(data.frame(start=start(hits), end=end(hits), width=width(hits), score=mcols(hits), atg = start(hits) + ((width(hits)-3)/2)))
rbind(data.frame(start=start(hits), end=end(hits), width=width(hits), score=mcols(hits), atg = start(hits) + ((width(hits)-3)/2)))
start(hits)
a=start(hits)
mcols(hits)
score(hits)
mcols(hits)$score
