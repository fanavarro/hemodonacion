install.packages("xlsx")
install.packages("xlsxjars")
install.packages("xlsx")
install.packages("xlsx")
install.packages("xlsx")
setwd("/home/fabad/hemodonacion/src")
# Leer el csv sin filtros
csv = read.csv("final_out_no_filter.csv", sep="\t",stringsAsFactors=FALSE)
View(csv)
csv[,"MUTATED_SEQUENCE_LENGTH"]=as.numeric(gsub("%","",csv$MUTATED_SEQUENCE_LENGTH))
csv[,"KOZAK_MUTATED_SEQUENCE_LENGTH"]=as.numeric(gsub("%","",csv$KOZAK_MUTATED_SEQUENCE_LENGTH))
csv = add_signal_lost_sup_info(csv)
add_signal_lost_sup_info = function(csv){
for (i in 1:nrow(csv)){
signal_start = csv[i,"SIGNAL_PEPTIDE_START"]
# Sumamos dos ya que en el csv se indica el inicio del ultimo codon
# De esta forma, signal_end tiene el nucleotido exacto donde
# termina el peptido seÃ±al.
signal_end = (csv[i,"SIGNAL_PEPTIDE_END"]) + 2
first_met = csv[i,"FIRST_MET_POSITION"]
first_kozak = csv[i,"KOZAK_START"]
signal_first_met_affected = NA
signal_first_kozak_affected = NA
if (!is.na(signal_start) && !is.na(signal_end)){
if(!is.na(first_met)){
if (first_met == signal_start){signal_first_met_affected = "Totally conserved"}
if (first_met > signal_start && first_met <= signal_end){signal_first_met_affected = "Partially conserved"}
if (first_met == (signal_end + 1)){signal_first_met_affected = "Exactly lost"}
if (first_met > (signal_end + 1)){signal_first_met_affected = "Lost"}
}
if (!is.na(first_kozak)){
if (first_kozak == signal_start){signal_first_kozak_affected = "Totally conserved"}
if (first_kozak > signal_start && first_kozak <= signal_end){signal_first_kozak_affected = "Partially conserved"}
if (first_kozak == (signal_end + 1)){signal_first_kozak_affected = "Exactly lost"}
if (first_kozak > (signal_end + 1)){signal_first_kozak_affected = "Lost"}
}
}
csv[i, "SIGNAL_FIRST_MET_AFFECTED"] = signal_first_met_affected
csv[i, "SIGNAL_FIRST_KOZAK_AFFECTED"] = signal_first_kozak_affected
}
return(csv)
}
csv = add_signal_lost_sup_info(csv)
csv$READING_FRAME_STATUS = factor(csv$READING_FRAME_STATUS)
csv$KOZAK_READING_FRAME_STATUS = factor(csv$KOZAK_READING_FRAME_STATUS)
csv$KOZAK_STOP_CODON = factor(csv$KOZAK_STOP_CODON)
csv$STOP_CODON_POSITION = factor(csv$STOP_CODON_POSITION)
csv$GENE_NAME = factor(csv$GENE_NAME)
csv$SIGNAL_FIRST_MET_AFFECTED = factor(csv$SIGNAL_FIRST_MET_AFFECTED)
csv$SIGNAL_FIRST_KOZAK_AFFECTED = factor(csv$SIGNAL_FIRST_KOZAK_AFFECTED)
# Eliminar los casos en los que hay errores en las regiones 5' o 3'
csv = csv[csv$CDS_ERRORS == '',]
# Eliminar los casos en los que el biotipo es "non_stop_decay" o "nonsense_mediated_decay"
csv = csv[csv$TRANSCRIPT_BIOTYPE != 'non_stop_decay' & csv$TRANSCRIPT_BIOTYPE != 'nonsense_mediated_decay',]
# Numero de genes con mutaciones afectando en el codon de inicio
length(unique(csv$GENE_NAME))
barplot(table(csv$GENE_NAME), horiz=T)
barplot(sort(table(csv$GENE_NAME)), horiz=T)
sort(table(csv$GENE_NAME))
View(sort(table(csv$GENE_NAME)))
View(table(csv$GENE_NAME))
csv[csv$GENE_NAME=="A2M"]
csv[csv$GENE_NAME=="A2ML1"]
csv[csv$GENE_NAME=="A2ML1",]
csv[csv$GENE_NAME=="A2M",]
csv = read.csv("final_out_no_filter.csv", sep="\t",stringsAsFactors=FALSE)
csv[csv$GENE_NAME=="A2M",]
csv[,"MUTATED_SEQUENCE_LENGTH"]=as.numeric(gsub("%","",csv$MUTATED_SEQUENCE_LENGTH))
csv[,"KOZAK_MUTATED_SEQUENCE_LENGTH"]=as.numeric(gsub("%","",csv$KOZAK_MUTATED_SEQUENCE_LENGTH))
csv = add_signal_lost_sup_info(csv)
csv$READING_FRAME_STATUS = factor(csv$READING_FRAME_STATUS)
csv$KOZAK_READING_FRAME_STATUS = factor(csv$KOZAK_READING_FRAME_STATUS)
csv$KOZAK_STOP_CODON = factor(csv$KOZAK_STOP_CODON)
csv$STOP_CODON_POSITION = factor(csv$STOP_CODON_POSITION)
csv$GENE_NAME = factor(csv$GENE_NAME)
csv$SIGNAL_FIRST_MET_AFFECTED = factor(csv$SIGNAL_FIRST_MET_AFFECTED)
csv$SIGNAL_FIRST_KOZAK_AFFECTED = factor(csv$SIGNAL_FIRST_KOZAK_AFFECTED)
# Eliminar los casos en los que hay errores en las regiones 5' o 3'
csv = csv[csv$CDS_ERRORS == '',]
# Eliminar los casos en los que el biotipo es "non_stop_decay" o "nonsense_mediated_decay"
csv = csv[csv$TRANSCRIPT_BIOTYPE != 'non_stop_decay' & csv$TRANSCRIPT_BIOTYPE != 'nonsense_mediated_decay',]
# Numero de genes con mutaciones afectando en el codon de inicio
length(unique(csv$GENE_NAME))
View(table(csv$GENE_NAME))
mean(table(csv$GENE_NAME))
9592/35978
35978/9592
table(csv$GENE_NAME)
table(csv$GENE_NAME)$Freq
table(csv$GENE_NAME)["Freq"]
a = table(csv$GENE_NAME)
a[1]
a[1,1]
a[1]$Freq
View(a)
length(csv)
nrow(csv)/length(unique(csv$GENE_ID))
length(unique(csv$GENE_ID)
)
length(unique(csv$GENE_NAME))
length(unique(csv$GENE_ID))
nrow(csv)/length(unique(csv$GENE_NAME))
nrow(csv)
nrow(csv)/length(unique(csv$GENE_NAME))
View(table(csv$GENE_NAME))
View(csv[csv$GENE_NAME == "TP53",])
View(csv[csv$GENE_NAME == "TP53",])
View(csv[csv$GENE_NAME == "CACNA1C",])
View(csv[csv$GENE_NAME == "TP53",])
View(csv[csv$GENE_NAME == "CDKN2A",])
