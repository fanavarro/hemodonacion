install.packages("xlsx")
install.packages("xlsxjars")
install.packages("xlsx")
install.packages("xlsx")
install.packages("xlsx")
install.packages("modeest")
source("https://bioconductor.org/biocLite.R")
biocLite("seqLogo")
install.packages("wavelets")
install.packages("wavethresh")
install.packages("waveslim")
setwd("~/hemodonacion/data/tsv")
# Leer el csv sin filtros
csv = read.csv("11_12_2016.csv", sep="\t",stringsAsFactors=FALSE)
csv[,"MUTATED_SEQUENCE_LENGTH_1"]=as.numeric(gsub("%","",csv$MUTATED_SEQUENCE_LENGTH_1))
csv[,"MUTATED_SEQUENCE_LENGTH_2"]=as.numeric(gsub("%","",csv$MUTATED_SEQUENCE_LENGTH_2))
csv[,"MUTATED_SEQUENCE_LENGTH_3"]=as.numeric(gsub("%","",csv$MUTATED_SEQUENCE_LENGTH_3))
csv[,"SIGNAL_PEPTIDE_CONSERVATION_1"]=as.numeric(gsub("%","",csv$SIGNAL_PEPTIDE_CONSERVATION_1))
csv[,"SIGNAL_PEPTIDE_CONSERVATION_2"]=as.numeric(gsub("%","",csv$SIGNAL_PEPTIDE_CONSERVATION_2))
csv[,"SIGNAL_PEPTIDE_CONSERVATION_3"]=as.numeric(gsub("%","",csv$SIGNAL_PEPTIDE_CONSERVATION_3))
csv$READING_FRAME_STATUS_1 = factor(csv$READING_FRAME_STATUS_1)
csv$READING_FRAME_STATUS_2 = factor(csv$READING_FRAME_STATUS_2)
csv$READING_FRAME_STATUS_3 = factor(csv$READING_FRAME_STATUS_3)
csv$STOP_CODON_POSITION_1 = factor(csv$STOP_CODON_POSITION_1)
csv$STOP_CODON_POSITION_2 = factor(csv$STOP_CODON_POSITION_2)
csv$STOP_CODON_POSITION_3 = factor(csv$STOP_CODON_POSITION_3)
csv$GENE_NAME = factor(csv$GENE_NAME)
csvWithMaf = csv[!is.na(csv$MINOR_ALLELE_FREQUENCY),]
csvNoMaf = csv[is.na(csv$MINOR_ALLELE_FREQUENCY),]
highMaf = csvWithMaf[csvWithMaf$MINOR_ALLELE_FREQUENCY >= 0.01,]
lowMaf = csvWithMaf[csvWithMaf$MINOR_ALLELE_FREQUENCY < 0.01,]
View(highMaf)
library(PWMEnrich)
pwm = data.matrix(read.table("/home/fabad/hemodonacion/src/myUtils/pwm/kozak_context.pwm"))
seq_snp = "ATTCACACCTGAGAACATCCAGCTCCTCTCAACAGCCCAACCCACACCAGCCTCAGACACCACCCTGACCGGCTCCTGCTGCGGCTCCACCTTGTCCTCCCTGAGCTACGGGGGAGGCTGCTGCCAGCCCTGCTGCTGCCGCGACCCCTGCTGCTGCCGCCCCGTGACCTGCCAGACCACCGTGTGCCGCCCCGTGACCTGCGTGCCCCGCTGCACGCGCCCCATCTGCGAGCCCTGCCGCCGCCCGGTGTGCTGCGACCCCTGCTCCCTGCAGGAAGGCTGCTGCCGCCCCATCACCTGCTGCCCCTCGTCGTGCACGGCTGTGGTGTGCAGGCCCTGCTGCTGGGCCACCACCTGCTGCCAGCCTGTGTCTGTGCAGTCCCCCTGCTGCCGGCCTCCCTGCGGCCAGCCGACCCCTTGCAGCACCACCTGCAGGACCTCCTCCTGCTGAGACCCCACCTCTCCTCTCAACGCACGAAACATTCCCAGGTGCACAGAAGCTTGTGCAGACTCTTCTACCCCTTCTGGATCAGATGAGAGACTCCACCTTTGCAGCCTAGCTGATCCTCAAGCACGAATTCAACAATAACATCCTATCTATTTCCCCACATAATTATGCAGCTAATCCTGGCCCTCTCTGACAATCTTGAGAAAAATTCCAGCTTTCATCATTCGAATTCCTGGCTTGAAAAAAAAAACGAGTAAATAAAAATCAAAGCTCCTCTTGAATAGAACTCTGTCCCACTGACTCATCACCCTTTTTTCTACTGTTTCAAGGTTCTCAGATGAGATTTTTTTCTTCCAGGATAATACTATTTGTATGCTGTATTTTTGCACTGTAAAAAAAAATAAAATTATATTTCTGGGGAAGCAAA"
seq_ins = "ATTCACACCTGAGAACATCCAGCTCCTCTCAACAGCCCAACCCACACCAGCCTCAGACACCACCAGTGACCGGCTCCTGCTGCGGCTCCACCTTGTCCTCCCTGAGCTACGGGGGAGGCTGCTGCCAGCCCTGCTGCTGCCGCGACCCCTGCTGCTGCCGCCCCGTGACCTGCCAGACCACCGTGTGCCGCCCCGTGACCTGCGTGCCCCGCTGCACGCGCCCCATCTGCGAGCCCTGCCGCCGCCCGGTGTGCTGCGACCCCTGCTCCCTGCAGGAAGGCTGCTGCCGCCCCATCACCTGCTGCCCCTCGTCGTGCACGGCTGTGGTGTGCAGGCCCTGCTGCTGGGCCACCACCTGCTGCCAGCCTGTGTCTGTGCAGTCCCCCTGCTGCCGGCCTCCCTGCGGCCAGCCGACCCCTTGCAGCACCACCTGCAGGACCTCCTCCTGCTGAGACCCCACCTCTCCTCTCAACGCACGAAACATTCCCAGGTGCACAGAAGCTTGTGCAGACTCTTCTACCCCTTCTGGATCAGATGAGAGACTCCACCTTTGCAGCCTAGCTGATCCTCAAGCACGAATTCAACAATAACATCCTATCTATTTCCCCACATAATTATGCAGCTAATCCTGGCCCTCTCTGACAATCTTGAGAAAAATTCCAGCTTTCATCATTCGAATTCCTGGCTTGAAAAAAAAAACGAGTAAATAAAAATCAAAGCTCCTCTTGAATAGAACTCTGTCCCACTGACTCATCACCCTTTTTTCTACTGTTTCAAGGTTCTCAGATGAGATTTTTTTCTTCCAGGATAATACTATTTGTATGCTGTATTTTTGCACTGTAAAAAAAAATAAAATTATATTTCTGGGGAAGCAAA"
hits_snp = matchPWM(pwm, seq_snp, with.score = T)
hits_ins = matchPWM(pwm, seq_ins, with.score = T)
hits_ins
hits_snp
start(hits_snp)
hits_snp = matchPWM(pwm, seq_snp, with.score = T, min.score = "20%")
hits_ins = matchPWM(pwm, seq_ins, with.score = T, min.score = "20%")
hits_ins
hits_snp
hits_snp = matchPWM(pwm, seq_snp, with.score = T)
hits_ins = matchPWM(pwm, seq_ins, with.score = T)
hits_snp
hits_ins
